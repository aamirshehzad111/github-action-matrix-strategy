on:
  push:
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
# on:
#   push:

# jobs:
#   build_variables:
#     runs-on: ubuntu-latest
#     environment: staging
#     steps:
#       - name: Extract Tag Name
#         id: build_variables
#         run: |
#           #... your script remains the same here
#           echo "image_tag=$image_tag" >> "$GITHUB_OUTPUT"
#           echo "build_version=$build_version" >> "$GITHUB_OUTPUT"
#           echo "build_full_version=$build_full_version" >> "$GITHUB_OUTPUT"

#     outputs:
#       image_tag: ${{ steps.build_variables.outputs.image_tag }}
#       build_version: ${{ steps.build_variables.outputs.build_version }}
#       build_full_version: ${{ steps.build_variables.outputs.build_full_version }}

#   check_variables:
#     needs: build_variables
#     runs-on: ubuntu-latest
#     environment: staging
#     steps:
#       - name: Check Variables
#         run: |
#           echo "Image Tag: ${{ needs.build_variables.outputs.image_tag }}"
#           echo "Build Version: ${{ needs.build_variables.outputs.build_version }}"
#           echo "Build Full Version: ${{ needs.build_variables.outputs.build_full_version }}"
